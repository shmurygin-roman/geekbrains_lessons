# Урок 7. Задание 1
# Реализовать класс Matrix (матрица).
# Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно
# — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.


class Matrix:
    def __init__(self, my_matrix):
        self.my_matrix = my_matrix

    def __str__(self):
        result = ''
        for m in self.my_matrix:
            result += ' '.join(f'{i:4}' for i in m) + '\n'
        return result

    def __add__(self, other):
        m1 = self.my_matrix
        m2 = other.my_matrix
        result = []
        if len(m1) == len(m2) and len(m1[0]) == len(m2[0]):
            for i in range(len(m1)):
                result.append([m1[i][j] + m2[i][j] for j in range(len(m1[i]))])
            return Matrix(result)
        else:
            return 'Сложение разноразмерных матриц недопустимо'


matrix_1 = Matrix([[31, 22, 3], [37, 43, 5], [51, 86, 7]])
matrix_2 = Matrix([[3, 5, 32], [2, 4, 6], [-1, 64, -8]])
print(matrix_1)
print(matrix_2)
print(matrix_1 + matrix_2)


